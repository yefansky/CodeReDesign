我需要新做一个文档对话功能，选中sidebar里的cvb文件，
会先将文件读取转换成cvb内存格式
然后调用rag.ts中的LoadCVB的接口
把他进行分拆记忆
然后做一个聊天的webPanel（新生成一个 chatToDoc.ts）
每次提问，都效用rag.ts里的query
找出top5以后调用deepseekapi去总结
然后以对话形式输出
排版就很类似chatpanel了
你完整实现一下


可以用一个简化的实现来处理长文本
1.如果当前处理的CVB超过2k大小则启用压缩机制
2.先遍历每个文件，如果文件还是太长，就切页
3.把每个页+需求一起prompt给api，告诉他从上到下按照顺序抽取有用的片段，
有用的意思是指可以用来修改替换的内容
或者是用来插入的锚点附近的上下文
以及可以用来解释需求作为辅助说明的代码
4.每个抽取块之间用 //... 来分割
5.把抽取信息重新拼成一个CVB，加上原始需求，并解释 //... 是省略上下文的提示，不可以用来当做锚点
然后走老流程读取CVB进行重构。

以上流程同样适用于分析代码
此设计的假设是实际需要用到的代码信息并不会超过大模型的最大token数
只是因为代码里包含了太多的无用信息才导致的超长

所以抽取完合并之后要再一次检查一下长度有没有超长
如果超了，可以再一次调用压缩

