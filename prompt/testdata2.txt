```TCVB
## BEGIN_TCVB

## FILE:k:\lab\CodeReDesign-dummy\src\siderBar.ts
## OPERATION:INSERT
## BEFORE_ANCHOR
```typescript
export function registerCvbContextMenu(context: vscode.ExtensionContext) {

  // 注册右键菜单命令
  const applyCvbCommand = vscode.commands.registerCommand('codeReDesign.applyThisCvb', (cvb: CvbFile) => {
```
## AFTER_ANCHOR
```typescript
  const workspaceFolders = vscode.workspace.workspaceFolders;
  if (workspaceFolders) {
    const targetFolder = path.join(workspaceFolders[0].uri.fsPath, '.CodeReDesignWorkSpace'); // 替换为你的子文件夹名称

    // 创建文件系统监听器
```
## INSERT_CONTENT
```typescript
    // 监听 .tcvb 和 .md 文件变化
    const markdownWatcher = vscode.workspace.createFileSystemWatcher(
      new vscode.RelativePattern(targetFolder, '**/*.md')
    );

    const tcvbWatcher = vscode.workspace.createFileSystemWatcher(
      new vscode.RelativePattern(targetFolder, '**/*.tcvb')
    );

    // 当文件变化时刷新视图
    markdownWatcher.onDidCreate(() => cvbViewProvider.refresh());
    markdownWatcher.onDidDelete(() => cvbViewProvider.refresh());
    markdownWatcher.onDidChange(() => cvvViewProvider.refresh());

    tcvbWatcher.onDidCreate(() => cvbViewProvider.refresh());
    tcvbWatcher.onDidDelete(() => cvbViewProvider.refresh());
    tcvbWatcher.onDidChange(() => cvbViewProvider.refresh());

    // 将监听器添加到订阅中，确保扩展销毁时清理资源
    context.subscriptions.push(markdownWatcher, tcvbWatcher);
  }
```

## FILE:k:\lab\CodeReDesign-dummy\src\deepseekApi.ts
## OPERATION:INSERT
## BEFORE_ANCHOR
```typescript
  if (apiResponse) {
    apiResponse = apiResponse.replace(/\r\n?/g, "\n");
    const tcvb = new TCVB(apiResponse);
```
## AFTER_ANCHOR
```typescript
    cvb.setMetaData("用户需求", userPrompt);
    const newCvbFilePath = path.join(tmpDir, fileName);
    fs.writeFileSync(newCvbFilePath, cvb.toString(), 'utf-8');
```
## INSERT_CONTENT
```typescript
    // 保存 TCVB 文件
    const tcvbFilename = path.join(tmpDir, `${path.basename(fileName, '.cvb')}.tcvb`);
    fs.writeFileSync(tcvbFilename, apiResponse, 'utf-8');

    // 保存分析结果
    const analysisFilename = path.join(tmpDir, `${path.basename(fileName, '.cvb')}_analysis.md`);
    fs.writeFileSync(analysisFilename, '分析结果\n\n' + analysisResult, 'utf-8');
```

## END_TCVB
```